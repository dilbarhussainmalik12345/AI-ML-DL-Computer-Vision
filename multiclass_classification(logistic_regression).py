# -*- coding: utf-8 -*-
"""Multiclass_Classification(Logistic_Regression).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Idw6B0BPJA_KTU1fYklqGqgsYG-XQ-p5
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import matplotlib.pyplot as plt
from sklearn.datasets import load_digits

digits = load_digits()

dir(digits)

digits.data[0]

plt.gray()
for i in range(5):
  plt.matshow(digits.images[i])

digits.target[0:5]

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(digits.data, digits.target, test_size = 0.2)

len(X_train)

len(X_test)

from sklearn.linear_model import LogisticRegression
model = LogisticRegression()

model.fit(X_train, y_train)

model.score(X_test, y_test)

plt.matshow(digits.images[67])

digits.target[67]

model.predict([digits.data[67]])

model.predict(digits.data[0:5])

y_predicted = model.predict(X_test)

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_predicted)
cm

#Easy way
import seaborn as sn
plt.figure(figsize = (10, 7))
sn.heatmap(cm, annot= True)
plt.xlabel('Predicted')
plt.ylabel('Truth')

